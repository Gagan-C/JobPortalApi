@page "/onboard/employer"
@rendermode InteractiveServer
@inject JobApiClient Http

<h3>OnboardEmployer</h3>
<div class="form-control">
<EditForm Model=@onboardingEmployer OnValidSubmit="@HandleOnboardingPost" FormName="Onboarding Form">
    <div class="row">
        <div class="col">
            <label for="CompanyName">Company Name: </label>
            <InputText id="ComanyName" DisplayName="Company Name" @bind-Value=@onboardingEmployer.CompanyName></InputText>
        </div>
        <div class="col">
            <label for="CompanyAddress">Company Address: </label>
            <InputText id="CompanyAddress" DisplayName="Company Address" @bind-Value=@onboardingEmployer.CompanyAddress></InputText>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <label for="FirstName">First Name: </label>
            <InputText id="FirstName" DisplayName="First Name" @bind-Value=@onboardingEmployer.EmployerFirstName></InputText>
        </div>
        <div class="col">
            <label for="LastName">Last Name: </label>
            <InputText id="LastName" DisplayName="Last Name" @bind-Value=@onboardingEmployer.EmployerLastName></InputText>
        </div>
    </div>
    <div class="row">
        
        <div class="col">
            <label for="Email">Email:</label>
            <InputText id="Email" DisplayName="Email" @bind-Value=@onboardingEmployer.EmployerEmail></InputText>
        </div>
        <div class="col">
            <label for="Password">Password: </label>
            <InputText id="Password" type="password" DisplayName="Password" @bind-Value=@onboardingEmployer.Password></InputText>
        </div>
    </div>

    <button type="submit" class="btn btn-primary m-1">Login</button>
</EditForm>
<p>response Code: @responseCode</p>
</div>
@if (responseCode == "OK")
{
    <div class="alert alert-success">
        Created successfully please ask user to login
    </div>
}

@code {
    OnboardingDTO onboardingEmployer = new OnboardingDTO();
    private string responseCode = "";
    public async Task HandleOnboardingPost()
    {
        var response= await Http.PostOnboardingEmployer(onboardingEmployer);
        var responsebody =response.Content.ReadAsStream();
        responseCode = response.StatusCode.ToString();
        Console.WriteLine(responsebody);
    }
    class OnboardingDTO
    {
        
        public string? EmployerFirstName { get; set; }
        
        public string? EmployerLastName { get; set; }
        
        public string? EmployerEmail { get; set; }
        
        public string? CompanyName { get; set; }
        
        public string? CompanyAddress{ get; set; }
        
        public string? Password  { get; set; } 
    }

}
